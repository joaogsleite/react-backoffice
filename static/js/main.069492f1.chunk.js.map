{"version":3,"sources":["components/SideMenu/style.module.scss","reducers/entry.ts","services/api/HttpError.ts","constants/api.ts","reducers/user.ts","services/api/index.ts","utils/index.ts","reducers/index.ts","components/Layout/style.module.scss","services/api/models/table.ts","components/TopMenu/style.module.scss","services/api/mock.ts","reducers/table.ts","reportWebVitals.ts","components/TopMenu/index.tsx","assets/logo.svg","components/SideMenu/Logo.tsx","components/SideMenu/Hamburger.tsx","components/SideMenu/index.tsx","hooks/useTables.ts","components/Layout/index.tsx","views/Loading/index.tsx","services/api/models/user.ts","services/auth/index.ts","components/PrivateRoute/renderContent.tsx","components/PrivateRoute/index.tsx","views/Root/index.tsx","index.tsx"],"names":["module","exports","FETCH_ENTRY_PENDING","FETCH_ENTRY_FULFILLED","FETCH_ENTRY_REJECTED","initialState","entry","undefined","loadingEntry","errorEntry","entryReducer","state","action","type","payload","HttpError","status","statusText","body","Error","API_ADDRESS","process","API_MOCK_ENABLED","FETCH_USER_FULFILLED","user","userReducer","api","baseUrl","defaultOptions","headers","method","endpoint","options","url","startsWith","this","mergedOptions","fetch","then","response","Promise","all","json","ok","request","data","delay","ms","resolve","setTimeout","userInitialState","tableInitialState","entryInitialState","reducers","tableReducer","middlewares","logger","recost","Provider","dispatch","useSelector","withState","table","FETCH_TABLES_PENDING","post","JSON","stringify","query","variables","error","entities","FETCH_TABLES_FULFILLED","catch","FETCH_TABLES_REJECTED","tableName","FETCH_TABLE_PENDING","config","FETCH_TABLE_FULFILLED","FETCH_TABLE_REJECTED","skip","take","FETCH_TABLE_ENTRIES_PENDING","name","columns","map","column","visible","list","errors","FETCH_TABLE_ENTRIES_FULFILLED","FETCH_TABLE_ENTRIES_REJECTED","message","pks","filterByPks","filter","detail","errorMessage","Array","isArray","resultFilter","Object","keys","forEach","pk","routes","mock","func","match","createMatcher","push","originalFetch","window","a","path","replace","route","result","params","Response","tables","loadingTables","loadingTableData","tableData","errorTableData","loading","find","t","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TopMenu","className","style","topMenu","role","aria-label","memo","Logo","to","logo","src","alt","Hamburger","hamburgerCheckbox","id","htmlFor","hamburgerButton","SideMenu","useEffect","useTables","sideMenuSpace","sideMenu","menuLabel","menuList","index","activeClassName","active","layout","label","Layout","children","layoutClasses","classNames","main","props","exact","render","Loading","loadingClasses","loadingContainer","get","username","password","auth","authenticated","localStorage","getItem","me","setItem","removeItem","login","logout","renderContent","Component","redirect","isAuthenticated","pathname","search","PrivateRouter","component","privateRender","rest","location","useLocation","Home","lazy","Table","Login","Logout","Root","fallback","PrivateRoute","App","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.069492f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandContainer\":\"style_brandContainer__3q4mK\",\"sideMenuSpace\":\"style_sideMenuSpace__dKBNk\",\"sideMenu\":\"style_sideMenu__3yjZ4\",\"menuLabel\":\"style_menuLabel__ViTZH\",\"menuList\":\"style_menuList__3Vto5\",\"active\":\"style_active__VAK3j\",\"logo\":\"style_logo__n12Q8\",\"hamburgerCheckbox\":\"style_hamburgerCheckbox__P4fsH\",\"hamburgerButton\":\"style_hamburgerButton__36gGB\"};","import { IAction, IBaseState } from \"recost\"\n\nexport const FETCH_ENTRY_PENDING = 'FETCH_ENTRY_PENDING'\nexport const FETCH_ENTRY_FULFILLED = 'FETCH_ENTRY_FULFILLED'\nexport const FETCH_ENTRY_REJECTED = 'FETCH_ENTRY_REJECTED'\nexport const CLEAR_ERROR_ENTRY = 'CLEAR_ERROR_ENTRY'\n\nexport type TEntry = Record<string, string | number>\n\nexport interface IEntryState extends IBaseState {\n  entry?: TEntry\n  loadingEntry: boolean\n  errorEntry?: string\n}\n\nexport const initialState: IEntryState = {\n  entry: undefined,\n  loadingEntry: false,\n  errorEntry: undefined,\n}\n\nexport function entryReducer(state: IEntryState, action: IAction) {\n  switch(action.type) {\n    case FETCH_ENTRY_PENDING:\n      return {\n        ...state,\n        entry: undefined,\n        loadingEntry: true,\n        errorEntry: undefined\n      }\n    case FETCH_ENTRY_FULFILLED:\n      return {\n        ...state,\n        loadingEntry: false,\n        entry: action.payload,\n        errorEntry: undefined\n      }\n    case FETCH_ENTRY_REJECTED:\n      return {\n        ...state,\n        loadingEntry: false,\n        entry: undefined,\n        errorEntry: action.payload,\n      }\n    case CLEAR_ERROR_ENTRY:\n      return {\n        ...state,\n        errorEntry: undefined,\n      }\n    default:\n      return state\n  }\n}","export interface IHttpError {\n  status: number,\n  statusText?: string,\n  body?: any,\n};\n\nexport default class HttpError extends Error{\n\n  public readonly status: number;\n  public readonly statusText?: string;\n  public readonly body?: any;\n\n  constructor({status, statusText, body}: IHttpError) {\n    super(statusText);\n    this.status = status;\n    this.statusText = statusText;\n    this.body = body;\n  }\n}","export const API_ADDRESS = process.env.REACT_APP_API_URL || (\n  process.env.NODE_ENV === 'production' \n    ? '/api'\n    : 'http://localhost:3004/'\n)\n\nexport const API_MOCK_ENABLED: boolean = true //process.env.NODE_ENV === 'test'","import { IAction, IBaseState } from \"recost\";\nimport { IUser } from \"services/api/models/user\";\n\nexport const FETCH_USER_FULFILLED = 'FETCH_USER_FULFILLED';\n\nexport interface IUserState extends IBaseState {\n  user?: IUser;\n};\n\nexport const initialState: IUserState = {\n  user: undefined,\n};\n\nexport function userReducer(state: IUserState, action: IAction) {\n  switch(action.type) {\n    case FETCH_USER_FULFILLED:\n      return {\n        ...state,\n        user: action.payload,\n      }\n    default:\n      return state\n  }\n}","import { API_ADDRESS } from 'constants/api'\nimport HttpError from './HttpError'\n\nimport './mock'\n\ntype FetchMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nexport class API {\n  private baseUrl = API_ADDRESS\n  private defaultOptions: RequestInit = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }\n\n  private request(method: FetchMethod, endpoint: string, options: RequestInit = {}) {\n    const url = endpoint.startsWith('http')\n      ? endpoint\n      : `${this.baseUrl}${endpoint}`\n    const mergedOptions: RequestInit = {\n      ...this.defaultOptions,\n      ...options,\n      method,\n      body: options.body,\n    }\n    return fetch(url, mergedOptions).then((response) => {\n      return Promise.all([\n        response, \n        response.json(),\n      ]);\n    }).then(([response, body]) => {\n      if (!response.ok) {\n        throw new HttpError({\n          status: response.status,\n          statusText: response.statusText,\n          body,\n        });\n      }\n      return body\n    })\n  }\n\n  get(endpoint: string, options?: RequestInit) {\n    return this.request('GET', endpoint, options)\n  }\n\n  post(endpoint: string, options?: RequestInit) {\n    return this.request('POST', endpoint, options)\n  }\n\n  put(endpoint: string, data: any, options?: RequestInit) {\n    return this.request('PUT', endpoint, options)\n  }\n\n  delete(endpoint: string, options?: RequestInit) {\n    return this.request('DELETE', endpoint, options)\n  }\n\n}\n\nconst api = new API()\nexport default api","export function delay(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}","import recost from 'recost'\nimport logger from 'recost-logger'\n\nimport {userReducer, initialState as userInitialState, IUserState } from './user'\nimport { tableReducer, initialState as tableInitialState, ITableState } from './table'\nimport { entryReducer, initialState as entryInitialState, IEntryState } from './entry'\n\ninterface IState extends IUserState, ITableState, IEntryState {}\n\nconst initialState: IState = {\n  ...userInitialState,\n  ...tableInitialState,\n  ...entryInitialState\n}\n\nconst reducers = [\n  userReducer,\n  tableReducer,\n  entryReducer,\n]\n\nconst middlewares = [\n  logger,\n]\n\nexport const { \n  Provider,\n  dispatch,\n  withState,\n  useSelector,\n} = recost<IState>(initialState, reducers, middlewares)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"style_layout__3gbYc\",\"main\":\"style_main__3CeqX\",\"children\":\"style_children__2mf42\"};","import api, { API } from 'services/api'\nimport { dispatch } from 'reducers'\nimport HttpError from '../HttpError'\nimport {\n  FETCH_TABLES_FULFILLED,\n  FETCH_TABLES_PENDING,\n  FETCH_TABLE_PENDING,\n  FETCH_TABLE_FULFILLED,\n  FETCH_TABLE_REJECTED,\n  FETCH_TABLES_REJECTED,\n  FETCH_TABLE_ENTRIES_FULFILLED,\n  FETCH_TABLE_ENTRIES_PENDING,\n  FETCH_TABLE_ENTRIES_REJECTED\n} from 'reducers/table'\nimport { FETCH_ENTRY_FULFILLED, FETCH_ENTRY_PENDING, FETCH_ENTRY_REJECTED } from 'reducers/entry'\n\nexport interface IColumn {\n  name: string,\n  searchable: boolean,\n  model?: {\n    isPk?: boolean,\n    type: string,\n    allowNull: boolean,\n  },\n  layout: {\n    label?: string,\n    [key: string]: unknown\n  }\n  visible: {\n    list: boolean,\n    detail: boolean,\n    relation: boolean\n  },\n}\n\nexport interface ITable {\n  loading?: boolean,\n  name: string,\n  columns?: IColumn[],\n  layout: {\n    label: string,\n  },\n}\n\nexport interface PKS extends Record<string, string | number> {}\n\nclass Table {\n  private api: API\n  \n  constructor (api: API) {\n    this.api = api\n  }\n\n  list() {\n    dispatch({ type : FETCH_TABLES_PENDING })\n    return this.api.post('/?', {\n      body: JSON.stringify({\n        query: `query {\n          entities {\n            name\n            layout\n          }\n        }`,\n        variables: null\n      })\n    }).then(\n      (body: any) => {\n        if (body.error) {\n          throw body.error\n        }\n        if (body.data?.entities) {\n          dispatch({ \n            type: FETCH_TABLES_FULFILLED, \n            payload: body.data.entities,\n          })\n          return body.data.entities\n        }\n      }\n    ).catch(\n      (error) => {\n        dispatch({ type: FETCH_TABLES_REJECTED })\n        throw error\n      }\n    )\n  }\n\n  config(tableName: string) {\n    dispatch({ type: FETCH_TABLE_PENDING, payload: tableName })\n    return this.api.post('/', {\n      body: JSON.stringify({\n        query: `query {\n          config {\n            ${tableName}\n          }\n        }`\n      })\n    }).then(\n      (body) => {\n        if (body.error) {\n          throw body.error\n        }\n        if (body.data?.config && body.data?.config[tableName]) {\n          dispatch({ \n            type: FETCH_TABLE_FULFILLED,\n            payload: body.data.config[tableName],\n          })\n          return body.data.config[tableName]\n        } else {\n          throw new HttpError({ status: 404 })\n        }\n      }\n    ).catch(\n      (error) => {\n        dispatch({ type: FETCH_TABLE_REJECTED })\n        throw error\n      }\n    )\n  }\n\n  getTableData(\n    table: ITable,\n    options: {\n      skip?: number\n      take?: number\n    } = {\n      skip: 0,\n      take: 10\n    }) {\n    dispatch({ type: FETCH_TABLE_ENTRIES_PENDING })\n    return this.api.post('/', {\n      body: JSON.stringify({\n        query: `query {\n          ${table.name} (skip: ${options.skip || 0}, take: ${options.take || 10}){\n            ${table.columns?.map(\n              (column) => column.visible.list && column.name\n            )}\n          }\n        }`\n      })\n    }).then(\n      (body) => {\n        if (body.errors) {\n          throw body.errors\n        }\n        if (body.data && body.data[table.name]) {\n          const data = body.data[table.name]\n          dispatch({ \n            type: FETCH_TABLE_ENTRIES_FULFILLED,\n            payload: data,\n          })\n          return data\n        }\n        dispatch({ \n          type: FETCH_TABLE_ENTRIES_FULFILLED,\n          payload: [],\n        })\n        return []\n      }\n    ).catch(\n      (errors) => {\n        dispatch({ type: FETCH_TABLE_ENTRIES_REJECTED, payload: errors[0].message })\n      }\n    )\n  }\n\n  getEntry(\n    table: ITable,\n    pks: PKS) {\n    dispatch({ type: FETCH_ENTRY_PENDING })\n    return this.api.post('/', {\n      body: JSON.stringify({\n        query: `query {\n          ${table.name} (filter: ${this.filterByPks(pks)}){\n            ${table.columns?.filter(\n              (column) => column.visible.detail\n            ).map(\n              (column) => column.name\n            )}\n          }\n        }`\n      })\n    }).then(\n      (body) => {\n        if (body.errors) {\n          throw body.errors\n        }\n        if (body.data && body.data[table.name]) {\n          const data = body.data[table.name]\n          dispatch({ \n            type: FETCH_ENTRY_FULFILLED,\n            payload: data,\n          })\n          return data\n        }\n        dispatch({ \n          type: FETCH_ENTRY_FULFILLED,\n          payload: [],\n        })\n        return []\n      }\n    ).catch(\n      (error) => {\n        const errorMessage = error.body\n          ? error.body.errors\n          : Array.isArray(error)\n            ? error[0].message\n            : error.message\n        dispatch({ type: FETCH_ENTRY_REJECTED, payload: errorMessage  })\n      }\n    )\n  }\n\n  private filterByPks(pks: PKS) {\n    let resultFilter: string = ''\n    Object.keys(pks).forEach(\n      (pk) => {\n        resultFilter += `{\n          ${pk}: {\n            _eq: ${pks[pk]}\n          }\n        }`\n      }\n    )\n    return resultFilter\n  }\n}\n\nconst table = new Table(api)\nexport default table\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topMenu\":\"style_topMenu__KHyDx\"};","import { API_ADDRESS } from \"constants/api\"\nimport createMatcher, { PathMatch, IMatchParams } from 'path-match'\nimport { delay } from \"utils\";\nimport { API_MOCK_ENABLED } from 'constants/api';\n\ntype MockedFetch = ((url: RequestInfo, params: IMatchParams, options?: RequestInit) => Promise<any>);\n\ntype Method = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nexport interface IMockRoute {\n  method: Method, \n  match: PathMatch;\n  func: MockedFetch,\n};\n\nconst routes: IMockRoute[] = [];\n\nexport default function mock(method: Method, url: string, func: MockedFetch) {\n  const match = createMatcher()(url);\n  routes.push({ method, match, func });\n}\n\nexport const originalFetch = window.fetch\n\nif (API_MOCK_ENABLED) {\n  \n  // mocks enabled\n  import('./models/table.mock')\n  import('./models/user.mock')\n  \n  // override fetch API\n  window.fetch = async (url: RequestInfo, options: RequestInit = {}) => {\n    await delay(300);\n    if (typeof url === 'string') {\n      const method = options.method || 'GET';\n      const path = url.replace(API_ADDRESS, '')\n      for (const route of routes) {\n        const result = route.match(path)\n        if (result && route.method === method) {\n          const params: IMatchParams = typeof result === 'boolean'\n            ? {}\n            : result\n          const response = await route.func(url, params, options)\n          return new Response(JSON.stringify(response))\n        }\n      }\n    }\n    return await originalFetch(url, options)\n  }\n}\n\n","import { IAction, IBaseState } from \"recost\"\nimport { ITable } from \"services/api/models/table\"\nimport type { TEntry } from \"./entry\"\n\nexport const FETCH_TABLES_PENDING = 'FETCH_TABLES_PENDING'\nexport const FETCH_TABLES_FULFILLED = 'FETCH_TABLES_FULFILLED'\nexport const FETCH_TABLES_REJECTED = 'FETCH_TABLES_REJECTED'\nexport const FETCH_TABLE_PENDING = 'FETCH_TABLE_PENDING'\nexport const FETCH_TABLE_FULFILLED = 'FETCH_TABLE_FULFILLED'\nexport const FETCH_TABLE_REJECTED = 'FETCH_TABLE_REJECTED'\nexport const FETCH_TABLE_ENTRIES_PENDING = 'FETCH_TABLE_ENTRIES_PENDING'\nexport const FETCH_TABLE_ENTRIES_FULFILLED = 'FETCH_TABLE_ENTRIES_FULFILLED'\nexport const FETCH_TABLE_ENTRIES_REJECTED = 'FETCH_TABLE_ENTRIES_REJECTED'\n\nexport interface ITableState extends IBaseState {\n  tables: ITable[]\n  loadingTables: boolean\n  tableData?: TEntry[]\n  errorTableData?: string\n  loadingTableData: boolean\n  error?: boolean\n}\n\nexport const initialState: ITableState = {\n  tables: [],\n  loadingTables: false,\n  loadingTableData: false,\n  error: false,\n}\n\nexport function tableReducer(state: ITableState, action: IAction) {\n  let tables = state.tables || []\n  switch(action.type) {\n    case FETCH_TABLE_ENTRIES_PENDING:\n      return {\n        ...state,\n        tableData: undefined,\n        loadingTableData: true,\n        errorTableData: undefined\n      }\n    case FETCH_TABLE_ENTRIES_FULFILLED:\n      return {\n        ...state,\n        loadingTableData: false,\n        tableData: action.payload,\n        errorTableData: undefined\n      }\n    case FETCH_TABLE_ENTRIES_REJECTED:\n      return {\n        ...state,\n        loadingTableData: false,\n        tableData: [],\n        errorTableData: action.payload,\n      }\n    case FETCH_TABLES_PENDING:\n      return {\n        ...state,\n        loadingTables: true,\n      }\n    \n    case FETCH_TABLE_PENDING:\n      tables = tables.map((table: ITable) => ({\n        ...table,\n        loading: table.name === action.payload\n          ? true\n          : table.loading,\n      }))\n      return {\n        ...state,\n        tables,\n      }\n\n    case FETCH_TABLES_FULFILLED:\n      (action.payload || []).forEach((table: ITable) => {\n        if (!tables.find((t: ITable) => t.name === table.name)) {\n          tables.push({\n            ...table,\n            loading: false\n          })\n        }\n      })\n      return {\n        ...state,\n        loadingTables: false,\n        tables,\n      }\n\n    case FETCH_TABLE_FULFILLED:\n      if (tables.length === 0) {\n        tables = [action.payload]\n      }\n      tables = tables.map((table: ITable) => {\n        return table.name === action.payload.name\n          ? { ...table, loading: false, ...action.payload }\n          : { ...table, loading: false }\n      })\n      return {\n        ...state,\n        loadingTables: false,\n        tables,\n      }\n\n    case FETCH_TABLE_REJECTED:\n    case FETCH_TABLES_REJECTED:\n      return {\n        ...state,\n        loadingTables: false,\n        error: true,\n      }\n\n    default:\n      return state\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React, { FC, memo } from \"react\";\nimport style from './style.module.scss';\n\nconst TopMenu: FC = () => {\n  return (\n    <nav className={style.topMenu} role=\"navigation\" aria-label=\"main navigation\">\n    </nav>      \n  )\n}\n\nexport default memo(TopMenu);","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from 'assets/logo.svg';\nimport style from './style.module.scss';\n\nconst Logo: FC = () => {\n  return (\n    <Link to='/' className={style.logo}>\n      <img src={logo} alt='logo' />\n    </Link>\n  )\n}\n\nexport default memo(Logo);","import React, { FC, memo } from 'react';\nimport style from './style.module.scss';\n\nconst Hamburger: FC = () => {\n  return <>\n    <input className={style.hamburgerCheckbox} id=\"hamburger\" type=\"checkbox\"></input>\n    <label htmlFor=\"hamburger\" className={style.hamburgerButton}>\n      <i className=\"fa fa-bars\"></i>\n    </label>\n  </>\n}\n\nexport default memo(Hamburger);","import React, { FC, memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport style from './style.module.scss';\n\nimport useTables from 'hooks/useTables';\nimport Logo from './Logo';\nimport Hamburger from './Hamburger';\n\nexport interface ISideMenuProps {};\n\nconst SideMenu: FC<ISideMenuProps> = () => {\n  const { tables, loading } = useTables()\n  return <>\n    <Hamburger />\n    <Logo />\n    <aside className={style.sideMenuSpace}>\n    </aside>\n    <aside className={style.sideMenu}>\n      <p className={style.menuLabel}>\n        Content Types\n      </p>\n      <ul className={style.menuList}>\n        {loading\n          ? <p>Loading...</p>\n          : tables.map((table, index) => (\n              <NavLink key={index} to={`/table/${table.name}`} activeClassName={style.active}>\n                {table.layout.label}\n              </NavLink>\n            ))\n        }\n      </ul>\n    </aside>\n  </>\n}\n\nexport default memo(SideMenu);","import { useEffect } from 'react'\nimport { useSelector } from \"reducers\"\n\nimport table from 'services/api/models/table'\n\nexport default function useTables() {\n\n  const tables = useSelector((state) => state.tables)\n  const loading = useSelector((state) => state.loadingTables)\n\n  useEffect(() => {\n    if (tables.length === 0 && !loading) {\n      table.list()\n    }\n  }, [tables, loading])\n\n  return { tables, loading }\n}","import React, { FC, memo } from 'react';\nimport { Route } from 'react-router-dom';\nimport classNames from 'classnames';\nimport style from './style.module.scss';\nimport TopMenu from 'components/TopMenu';\nimport SideMenu from 'components/SideMenu';\n\nexport interface ILayoutProps {\n  children?: any[] | any;\n  className?: string;\n};\n\nconst Layout: FC<ILayoutProps> = ({ children, className = '' }) => {\n  const layoutClasses = classNames({\n    [style.layout]: true,\n    [className]: className,\n  });\n  return (\n    <div className={layoutClasses}>\n      <SideMenu />\n      <div className={style.main}>\n        <TopMenu />\n        <div className={style.children}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo((props: ILayoutProps) => {\n  const path = Array.isArray(props.children)\n    ? props.children.map((route: any) => route.props.path)\n    : props.children.props.path\n  const render = () => (\n    <Layout {...props} />\n  )\n  return (\n    <Route exact path={path} render={render} />\n  )\n});","import React, { FC, ReactNode, memo } from 'react';\nimport classNames from 'classnames';\nimport style from './style.module.scss';\n\nexport interface ILoadingProps {\n  children?: ReactNode;\n  className?: string;\n};\n\nconst Loading: FC<ILoadingProps> = ({ children = null, className = '' }) => {\n  const loadingClasses = classNames({\n    [style.loadingContainer]: true,\n    [className]: className,\n  });\n  return (\n    <div className={loadingClasses}>\n      {children}\n      Loading...\n    </div>\n  );\n}\n\nexport default memo(Loading);","import api, { API } from 'services/api';\nimport { dispatch } from 'reducers';\nimport HttpError from '../HttpError';\nimport { FETCH_USER_FULFILLED } from 'reducers/user';\nimport { delay } from 'utils/index';\n\nexport interface IUser {\n  id?: number,\n  name: string,\n  username: string,\n  password?: string,\n};\n\nclass User {\n  private api: API;\n  \n  constructor (api: API) {\n    this.api = api;\n  }\n\n  async me() {\n    dispatch({ type : 'FETCH_USER_PENDING' });\n    await delay(100)\n    return await this.api.get('/users/me').then((user: IUser) => {\n      if (user && user.id) {\n        dispatch({ \n          type: FETCH_USER_FULFILLED, \n          payload: user,\n        });\n        return user;\n      } else {\n        throw new HttpError({ status: 403 })\n      }\n    })\n  }\n\n  login(username: string, password: string) {\n    const data = {\n      username,\n      password,\n    }\n    return this.api.post('/auth/local', { body: JSON.stringify(data)}).then((user: IUser) => {\n      if (user.id) {\n        dispatch({ \n          type: FETCH_USER_FULFILLED, \n          payload: user,\n        })\n        return user\n      } else {\n        throw new HttpError({ status: 403 })\n      }\n    })\n  }\n\n  logout () {\n    return this.api.get('/logout').then(() => {\n      dispatch({ type:'LOGOUT' });\n      return true\n    })\n  }\n}\n\nconst user = new User(api)\nexport default user\n","import user, { IUser } from 'services/api/models/user';\n\nclass Auth {\n\n  private user?: IUser;\n  private authenticated: boolean = true;\n\n  constructor() {\n    const username = localStorage.getItem('username') || undefined;\n    if (username) {\n      this.authenticated = true;\n      user.me().then((result) => {\n        if (result) {\n          this.user = result;\n          localStorage.setItem('username', this.user.username);\n        }\n      }).catch(() => {\n        this.user = undefined\n        this.authenticated = false\n        localStorage.removeItem('username');\n      })\n    } else {\n      this.authenticated = true;\n    }\n  }\n\n  get isAuthenticated() {\n    return this.authenticated;\n  }\n\n  get me() {\n    return this.user;\n  }\n\n  async login(username: string, password: string) {\n    try {\n      const result = await user.login(username, password);\n      this.user = result;\n      this.authenticated = true;\n      localStorage.setItem('username', this.user.username);\n    } catch (error) {\n      this.user = undefined;\n      this.authenticated = false;\n    }\n  }\n\n  async logout() {\n    try {\n      await user.logout();\n    } finally {\n      this.authenticated = false;\n      this.user = undefined;\n      localStorage.removeItem('username');\n    }\n  }\n}\n\nconst auth = new Auth();\nexport default auth;","import React, { FC, ComponentType } from 'react'\nimport { Redirect, RouteProps } from 'react-router-dom'\nimport auth from 'services/auth'\n\nexport function renderContent<T extends RouteProps = RouteProps>(Component?: ComponentType<T>, render?: FC<T>, redirect?: string) {\n  return function(props: T) {\n    if (auth.isAuthenticated) {\n      if (Component) {\n        return (\n          <Component {...props} />\n        )\n      } else if (render) {\n        return (\n          render(props)\n        )\n      } else {\n        return null\n      }\n    } else {\n      const to = {\n        pathname: '/login',\n        search: `?redirect=${redirect}`,\n      }\n      return (\n        <Redirect to={to} />\n      )\n    }\n  }\n}","import React, { FC, ComponentType } from 'react'\nimport { Route, useLocation } from 'react-router-dom'\nimport { renderContent } from './renderContent'\n\nexport interface IPrivateRoute {\n  component?: ComponentType<any>,\n  render?: FC<any>,\n  [key: string]: any,\n}\n\nconst PrivateRouter: FC<IPrivateRoute> = ({\n  component: Component,\n  render: privateRender,\n  ...rest\n}) => {\n\n  const location = useLocation()\n\n  return (\n    <Route\n      {...rest}\n      render={renderContent(Component, privateRender, location.pathname)}\n    />\n  )\n}\n\nexport default PrivateRouter\n","import React, { lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Layout from 'components/Layout';\nimport Loading from 'views/Loading';\nimport PrivateRoute from 'components/PrivateRoute';\n\nconst Home = lazy(() => import('views/Home'));\nconst Table = lazy(() => import('views/Table'));\nconst Login = lazy(() => import('views/Login'));\nconst Logout = lazy(() => import('views/Logout'));\n\nexport function Root() {\n  return (\n    <Suspense fallback={<Loading />}>\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/logout\" component={Logout} />\n      <Layout>\n        <PrivateRoute exact path=\"/\" component={Home} />\n        <PrivateRoute exact path=\"/table/:tableName\" component={Table} />\n      </Layout>\n    </Suspense>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Root } from 'views/Root';\nimport { Provider } from './reducers';\n\nimport 'style/index.scss';\n\nconst App: React.FC = () => (\n  <Provider>\n    <BrowserRouter basename={process.env.REACT_APP_PUBLIC_URL}>\n      <Root />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}