{"version":3,"sources":["services/api/models/table.mock.ts"],"names":["TABLES","name","layout","label","mock","a","url","params","tableName","columns"],"mappings":"8KAGMA,EAAmB,CACvB,CACEC,KAAM,QACNC,OAAQ,CACNC,MAAO,UAGX,CACEF,KAAM,WACNC,OAAQ,CACNC,MAAO,cAKbC,YAAK,MAAO,UAAR,sBAAmB,sBAAAC,EAAA,+EACdL,GADc,4CAIvBI,YAAK,MAAO,qBAAR,uCAA8B,WAAOE,EAAKC,GAAZ,SAAAF,EAAA,2DACxBE,EAAOC,UADiB,OAEzB,UAFyB,OAWzB,aAXyB,4DAI1BC,QAAS,CACP,CAAER,KAAM,MACR,CAAEA,KAAM,YACR,CAAEA,KAAM,WAEPD,EAAO,KATgB,6CAa1BS,QAAS,CACP,CAAER,KAAM,MACR,CAAEA,KAAM,QACR,CAAEA,KAAM,iBAEPD,EAAO,KAlBgB,4EAA9B","file":"static/js/7.7da1de2b.chunk.js","sourcesContent":["import { ITable } from './table';\nimport mock from '../mock';\n\nconst TABLES: ITable[] = [\n  { \n    name: 'users',\n    layout: {\n      label: 'Users',\n    },\n  },\n  { \n    name: 'products',\n    layout: {\n      label: 'Products',\n    },\n  },\n];\n\nmock('GET', '/tables', async () => {\n  return TABLES;\n});\n\nmock('GET', '/tables/:tableName', async (url, params) => {\n  switch (params.tableName){\n    case 'users':\n      return {\n        columns: [\n          { name: 'id' },\n          { name: 'username' },\n          { name: 'email' },\n        ],\n        ...TABLES[0],\n      };\n    case 'products':\n      return {\n        columns: [\n          { name: 'id' },\n          { name: 'name' },\n          { name: 'description' },\n        ],\n        ...TABLES[1],\n      };\n    default:\n      return ;\n  }\n})"],"sourceRoot":""}